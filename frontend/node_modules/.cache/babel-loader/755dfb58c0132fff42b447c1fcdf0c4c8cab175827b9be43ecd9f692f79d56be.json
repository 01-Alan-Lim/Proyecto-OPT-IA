{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getChatHistory, sendMessage, loadChat } from '../services/api';\nconst useChat = userId => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSendMessage = async (input, chatId) => {\n    setIsLoading(true);\n    setError(null);\n    const handleSendMessage = async (input, chatId) => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        var _response$data, _response$data2;\n        const response = await sendMessage(userId, input, chatId);\n        setMessages(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.history) || []);\n        return ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.chatId) || null;\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const handleLoadChat = async chatId => {\n      try {\n        var _response$data3;\n        setIsLoading(true);\n        const response = await loadChat(userId, chatId);\n        setMessages(((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.history) || []);\n        setError(null);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(\"Error cargando chat: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n        throw err;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    return {\n      messages,\n      isLoading,\n      error,\n      sendMessage: handleSendMessage,\n      loadChat: handleLoadChat,\n      setMessages\n    };\n  };\n};\n_s(useChat, \"7poOMv2jBAq/gmvoW2yS2scu15o=\");\nexport default useChat;","map":{"version":3,"names":["useState","getChatHistory","sendMessage","loadChat","useChat","userId","_s","messages","setMessages","isLoading","setIsLoading","error","setError","handleSendMessage","input","chatId","_response$data","_response$data2","response","data","history","_error$response","_error$response$data","message","handleLoadChat","_response$data3","err","_err$response","_err$response$data"],"sources":["/home/university/Escritorio/Inteligencia Artificial/Proyecto 2 - Alan Limachi/Proyecto-Agente-IA/frontend/src/hooks/useChat.js"],"sourcesContent":["import { useState } from 'react';\nimport { getChatHistory, sendMessage, loadChat } from '../services/api';\n\nconst useChat = (userId) => {\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSendMessage = async (input, chatId) => {\n    setIsLoading(true);\n    setError(null);\n    \n  const handleSendMessage = async (input, chatId) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await sendMessage(userId, input, chatId);\n      setMessages(response.data?.history || []);\n      return response.data?.chatId || null;\n    } catch (error) {\n      setError(error.response?.data?.error || error.message);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLoadChat = async (chatId) => {\n    try {\n      setIsLoading(true);\n      const response = await loadChat(userId, chatId);\n      setMessages(response.data?.history || []);\n      setError(null);\n    } catch (err) {\n      setError(\"Error cargando chat: \" + (err.response?.data?.error || err.message));\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    messages,\n    isLoading,\n    error,\n    sendMessage: handleSendMessage,\n    loadChat: handleLoadChat,\n    setMessages\n  };\n};\n}\nexport default useChat;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,iBAAiB;AAEvE,MAAMC,OAAO,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,KAAK;IACjDL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEhB,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,KAAK;MACjDL,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QAAA,IAAAI,cAAA,EAAAC,eAAA;QACF,MAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAACG,MAAM,EAAES,KAAK,EAAEC,MAAM,CAAC;QACzDP,WAAW,CAAC,EAAAQ,cAAA,GAAAE,QAAQ,CAACC,IAAI,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,OAAO,KAAI,EAAE,CAAC;QACzC,OAAO,EAAAH,eAAA,GAAAC,QAAQ,CAACC,IAAI,cAAAF,eAAA,uBAAbA,eAAA,CAAeF,MAAM,KAAI,IAAI;MACtC,CAAC,CAAC,OAAOJ,KAAK,EAAE;QAAA,IAAAU,eAAA,EAAAC,oBAAA;QACdV,QAAQ,CAAC,EAAAS,eAAA,GAAAV,KAAK,CAACO,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBX,KAAK,KAAIA,KAAK,CAACY,OAAO,CAAC;QACtD,MAAMZ,KAAK;MACb,CAAC,SAAS;QACRD,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAED,MAAMc,cAAc,GAAG,MAAOT,MAAM,IAAK;MACvC,IAAI;QAAA,IAAAU,eAAA;QACFf,YAAY,CAAC,IAAI,CAAC;QAClB,MAAMQ,QAAQ,GAAG,MAAMf,QAAQ,CAACE,MAAM,EAAEU,MAAM,CAAC;QAC/CP,WAAW,CAAC,EAAAiB,eAAA,GAAAP,QAAQ,CAACC,IAAI,cAAAM,eAAA,uBAAbA,eAAA,CAAeL,OAAO,KAAI,EAAE,CAAC;QACzCR,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOc,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZhB,QAAQ,CAAC,uBAAuB,IAAI,EAAAe,aAAA,GAAAD,GAAG,CAACR,QAAQ,cAAAS,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcR,IAAI,cAAAS,kBAAA,uBAAlBA,kBAAA,CAAoBjB,KAAK,KAAIe,GAAG,CAACH,OAAO,CAAC,CAAC;QAC9E,MAAMG,GAAG;MACX,CAAC,SAAS;QACRhB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAED,OAAO;MACLH,QAAQ;MACRE,SAAS;MACTE,KAAK;MACLT,WAAW,EAAEW,iBAAiB;MAC9BV,QAAQ,EAAEqB,cAAc;MACxBhB;IACF,CAAC;EACH,CAAC;AACD,CAAC;AAAAF,EAAA,CAhDKF,OAAO;AAiDb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}