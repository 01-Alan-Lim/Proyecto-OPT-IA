{"ast":null,"code":"var _jsxFileName = \"/home/university/Escritorio/Inteligencia Artificial/Proyecto 2 - Alan Limachi/Proyecto-Agente-IA/frontend/src/components/chat/ChatMessage.jsx\";\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatMessage = ({\n  message\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `message ${message.role}`,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-content\",\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"message-timestamp\",\n    children: new Date(message.timestamp).toLocaleTimeString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = ChatMessage;\nexport default ChatMessage;\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["ReactMarkdown","jsxDEV","_jsxDEV","ChatMessage","message","className","role","children","content","fileName","_jsxFileName","lineNumber","columnNumber","Date","timestamp","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/home/university/Escritorio/Inteligencia Artificial/Proyecto 2 - Alan Limachi/Proyecto-Agente-IA/frontend/src/components/chat/ChatMessage.jsx"],"sourcesContent":["import ReactMarkdown from 'react-markdown';\n\nconst ChatMessage = ({ message }) => (\n  <div className={`message ${message.role}`}>\n    <div className=\"message-content\">\n      <ReactMarkdown>{message.content}</ReactMarkdown>\n    </div>\n    <span className=\"message-timestamp\">\n      {new Date(message.timestamp).toLocaleTimeString()}\n    </span>\n  </div>\n);\n\nexport default ChatMessage;"],"mappings":";AAAA,OAAOA,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,kBAC9BF,OAAA;EAAKG,SAAS,EAAE,WAAWD,OAAO,CAACE,IAAI,EAAG;EAAAC,QAAA,gBACxCL,OAAA;IAAKG,SAAS,EAAC,iBAAiB;IAAAE,QAAA,eAC9BL,OAAA,CAACF,aAAa;MAAAO,QAAA,EAAEH,OAAO,CAACI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC,eACNV,OAAA;IAAMG,SAAS,EAAC,mBAAmB;IAAAE,QAAA,EAChC,IAAIM,IAAI,CAACT,OAAO,CAACU,SAAS,CAAC,CAACC,kBAAkB,CAAC;EAAC;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACJ,CACN;AAACI,EAAA,GATIb,WAAW;AAWjB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}