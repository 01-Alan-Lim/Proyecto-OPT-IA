{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getChatTopics } from '../services/api';\nconst useTopics = chatId => {\n  _s();\n  const [topics, setTopics] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!chatId) {\n      setTopics([]);\n      return;\n    }\n    const fetchTopics = async () => {\n      setLoading(true);\n      try {\n        var _response$data;\n        const response = await getChatTopics(chatId);\n        setTopics(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.topics) || []);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTopics();\n  }, [chatId]);\n  return {\n    topics,\n    loading,\n    error\n  };\n};\n_s(useTopics, \"tj8k7PpWlLe35gD9q7yk74z3CcU=\");\nexport default useTopics;","map":{"version":3,"names":["useState","useEffect","getChatTopics","useTopics","chatId","_s","topics","setTopics","loading","setLoading","error","setError","fetchTopics","_response$data","response","data","err","message"],"sources":["/home/university/Escritorio/Inteligencia Artificial/Proyecto 2 - Alan Limachi/Proyecto-Agente-IA/frontend/src/hooks/useTopics.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getChatTopics } from '../services/api';\n\nconst useTopics = (chatId) => {\n  const [topics, setTopics] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!chatId) {\n      setTopics([]);\n      return;\n    }\n\n    const fetchTopics = async () => {\n      setLoading(true);\n      try {\n        const response = await getChatTopics(chatId);\n        setTopics(response.data?.topics || []);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTopics();\n  }, [chatId]);\n\n  return { topics, loading, error };\n};\n\nexport default useTopics;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,MAAMC,SAAS,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,MAAM,EAAE;MACXG,SAAS,CAAC,EAAE,CAAC;MACb;IACF;IAEA,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QAAA,IAAAI,cAAA;QACF,MAAMC,QAAQ,GAAG,MAAMZ,aAAa,CAACE,MAAM,CAAC;QAC5CG,SAAS,CAAC,EAAAM,cAAA,GAAAC,QAAQ,CAACC,IAAI,cAAAF,cAAA,uBAAbA,cAAA,CAAeP,MAAM,KAAI,EAAE,CAAC;MACxC,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZL,QAAQ,CAACK,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,OAAO;IAAEE,MAAM;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACnC,CAAC;AAACL,EAAA,CA3BIF,SAAS;AA6Bf,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}