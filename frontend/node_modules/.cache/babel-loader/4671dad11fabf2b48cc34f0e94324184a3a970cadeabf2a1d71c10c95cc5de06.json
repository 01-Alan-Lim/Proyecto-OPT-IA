{"ast":null,"code":"var _jsxFileName = \"/home/university/Escritorio/Inteligencia Artificial/Proyecto 2 - Alan Limachi/Proyecto-Agente-IA/frontend/src/pages/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from '@mui/material';\nimport Sidebar from '../components/slidebar/Slidebar';\nimport ChatArea from '../components/chat/ChatArea';\nimport useChat from '../hooks/useChat';\nimport useChatHistory from '../hooks/useChatHistory';\nimport '../styles/chatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = ({\n  userId = 'default-user'\n}) => {\n  _s();\n  const {\n    messages,\n    isLoading,\n    error,\n    sendMessage,\n    loadChat,\n    setMessages\n  } = useChat(userId);\n  const {\n    chatHistory,\n    currentChatId,\n    setCurrentChatId,\n    setChatHistory\n  } = useChatHistory(userId);\n  const handleSubmit = async input => {\n    const chatId = await sendMessage(input, currentChatId);\n    if (!currentChatId) {\n      setChatHistory(prev => {\n        var _messages$, _messages$$content;\n        return [{\n          id: chatId,\n          title: input.substring(0, 30) + (input.length > 30 ? '...' : ''),\n          lastMessage: ((_messages$ = messages[0]) === null || _messages$ === void 0 ? void 0 : (_messages$$content = _messages$.content) === null || _messages$$content === void 0 ? void 0 : _messages$$content.substring(0, 50)) + '...' || 'Nuevo chat',\n          timestamp: new Date().toISOString()\n        }, ...prev];\n      });\n    }\n    setCurrentChatId(chatId);\n  };\n  const handleLoadChat = async chatId => {\n    await loadChat(chatId);\n    setCurrentChatId(chatId);\n  };\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentChatId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      chats: chatHistory,\n      currentChatId: currentChatId,\n      onSelectChat: handleLoadChat,\n      onNewChat: handleNewChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      messages: messages,\n      isLoading: isLoading,\n      error: error,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"fKOcytV5zGROExIqlxKEFHGuKh8=\", false, function () {\n  return [useChat, useChatHistory];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Sidebar","ChatArea","useChat","useChatHistory","jsxDEV","_jsxDEV","ChatPage","userId","_s","messages","isLoading","error","sendMessage","loadChat","setMessages","chatHistory","currentChatId","setCurrentChatId","setChatHistory","handleSubmit","input","chatId","prev","_messages$","_messages$$content","id","title","substring","length","lastMessage","content","timestamp","Date","toISOString","handleLoadChat","handleNewChat","className","children","chats","onSelectChat","onNewChat","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/home/university/Escritorio/Inteligencia Artificial/Proyecto 2 - Alan Limachi/Proyecto-Agente-IA/frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography } from '@mui/material';\nimport Sidebar from '../components/slidebar/Slidebar';\nimport ChatArea from '../components/chat/ChatArea';\nimport useChat from '../hooks/useChat';\nimport useChatHistory from '../hooks/useChatHistory';\nimport '../styles/chatPage.css';\n\nconst ChatPage = ({ userId = 'default-user' }) => {\n  const { \n    messages, \n    isLoading, \n    error, \n    sendMessage, \n    loadChat, \n    setMessages \n  } = useChat(userId);\n  \n  const { \n    chatHistory, \n    currentChatId, \n    setCurrentChatId, \n    setChatHistory \n  } = useChatHistory(userId);\n\n  const handleSubmit = async (input) => {\n    const chatId = await sendMessage(input, currentChatId);\n    \n    if (!currentChatId) {\n      setChatHistory(prev => [{\n        id: chatId,\n        title: input.substring(0, 30) + (input.length > 30 ? '...' : ''),\n        lastMessage: messages[0]?.content?.substring(0, 50) + '...' || 'Nuevo chat',\n        timestamp: new Date().toISOString()\n      }, ...prev]);\n    }\n    \n    setCurrentChatId(chatId);\n  };\n\n  const handleLoadChat = async (chatId) => {\n    await loadChat(chatId);\n    setCurrentChatId(chatId);\n  };\n\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentChatId(null);\n  };\n\n  return (\n    <div className=\"chat-page-container\">\n      <Sidebar\n        chats={chatHistory}\n        currentChatId={currentChatId}\n        onSelectChat={handleLoadChat}\n        onNewChat={handleNewChat}\n      />\n      \n      <ChatArea\n        messages={messages}\n        isLoading={isLoading}\n        error={error}\n        onSubmit={handleSubmit}\n      />\n    </div>\n  );\n};\n\nexport default ChatPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,OAAO,MAAM,iCAAiC;AACrD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM,GAAG;AAAe,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM;IACJC,QAAQ;IACRC,SAAS;IACTC,KAAK;IACLC,WAAW;IACXC,QAAQ;IACRC;EACF,CAAC,GAAGZ,OAAO,CAACK,MAAM,CAAC;EAEnB,MAAM;IACJQ,WAAW;IACXC,aAAa;IACbC,gBAAgB;IAChBC;EACF,CAAC,GAAGf,cAAc,CAACI,MAAM,CAAC;EAE1B,MAAMY,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,MAAMC,MAAM,GAAG,MAAMT,WAAW,CAACQ,KAAK,EAAEJ,aAAa,CAAC;IAEtD,IAAI,CAACA,aAAa,EAAE;MAClBE,cAAc,CAACI,IAAI;QAAA,IAAAC,UAAA,EAAAC,kBAAA;QAAA,OAAI,CAAC;UACtBC,EAAE,EAAEJ,MAAM;UACVK,KAAK,EAAEN,KAAK,CAACO,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,IAAIP,KAAK,CAACQ,MAAM,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;UAChEC,WAAW,EAAE,EAAAN,UAAA,GAAAd,QAAQ,CAAC,CAAC,CAAC,cAAAc,UAAA,wBAAAC,kBAAA,GAAXD,UAAA,CAAaO,OAAO,cAAAN,kBAAA,uBAApBA,kBAAA,CAAsBG,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,IAAG,KAAK,IAAI,YAAY;UAC3EI,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,EAAE,GAAGX,IAAI,CAAC;MAAA,EAAC;IACd;IAEAL,gBAAgB,CAACI,MAAM,CAAC;EAC1B,CAAC;EAED,MAAMa,cAAc,GAAG,MAAOb,MAAM,IAAK;IACvC,MAAMR,QAAQ,CAACQ,MAAM,CAAC;IACtBJ,gBAAgB,CAACI,MAAM,CAAC;EAC1B,CAAC;EAED,MAAMc,aAAa,GAAGA,CAAA,KAAM;IAC1BrB,WAAW,CAAC,EAAE,CAAC;IACfG,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEZ,OAAA;IAAK+B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClChC,OAAA,CAACL,OAAO;MACNsC,KAAK,EAAEvB,WAAY;MACnBC,aAAa,EAAEA,aAAc;MAC7BuB,YAAY,EAAEL,cAAe;MAC7BM,SAAS,EAAEL;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEFvC,OAAA,CAACJ,QAAQ;MACPQ,QAAQ,EAAEA,QAAS;MACnBC,SAAS,EAAEA,SAAU;MACrBC,KAAK,EAAEA,KAAM;MACbkC,QAAQ,EAAE1B;IAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpC,EAAA,CA3DIF,QAAQ;EAAA,QAQRJ,OAAO,EAOPC,cAAc;AAAA;AAAA2C,EAAA,GAfdxC,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}